{"version":3,"sources":["mainImg.png","serviceWorker.js","actions.js","containers/GamingFrame.js","components/WrappedLink.js","components/App.js","components/Root.js","reducers.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","SELECT_TYPE","GamingFrame","_this$props","this","props","classes","url","dispatch","RouterLink","_ref","navigateTo","react_default","a","createElement","Link","Object","assign","to","WrappedLink","selectWeapon","weapon","type","selectionType","index_es","className","fullWidth","header","titleTypographyProps","style","fontFamily","animation","fontSize","component","title","media","image","backGroundImg","variant","actions","onClick","color","aria-label","PanoramaFishEye_default","Clear_default","Component","WrappedMatUIGamingFrame","withStyles","theme","marginBottom","paddingBottom","objectSpread","width","mixins","gutters","spacing","unit","height","backgroundSize","display","justifyContent","connect","customTheme","createMuiTheme","palette","primary","main","blue","typography","useNextVariants","fullHeight","minHeight","minWidth","backgroundColor","center","textAlign","padding","params","core_styles","Grid_default","justify","container","item","xs","containers_GamingFrame","Root","store","es","BrowserRouter","Route","path","App","crossZeroApp","initialState","handlers","state","arguments","length","undefined","action","hasOwnProperty","createReducer","userType","computerType","fieldsPosition","Array","fill","defineProperty","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","apply","composedEnhancers","compose","rootReducer","combineReducers","reducers","form","formReducer","createStore","configureStore","render","components_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.15f94105.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mainImg.9929ac8c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","\r\n// action types\r\nexport const SELECT_TYPE = 'SELECT_TYPE';\r\n\r\n\r\n// other constants\r\n\r\n\r\n// action creators\r\n\r\nexport function selectType(crossOrZero) {\r\n  return {\r\n    type: SELECT_TYPE,\r\n    selectionType: crossOrZero\r\n  }\r\n}","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { \r\n  withStyles, \r\n  Fab, \r\n  Card, \r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography} from '@material-ui/core';\r\nimport WrappedLink from '../components/WrappedLink';\r\nimport backGroundImg from '../mainImg.png';\r\nimport { selectType } from '../actions';\r\n\r\nconst styles = theme => {\r\n\r\n  return {\r\n    header: {\r\n      marginBottom: 0,\r\n      paddingBottom: 0\r\n    },\r\n    fullWidth: {\r\n      width: '100%',\r\n      ...theme.mixins.gutters(),\r\n      paddingBottom: theme.spacing.unit * 2\r\n    },\r\n    media: {\r\n      height: '60%',\r\n      backgroundSize: 'contain'\r\n    },\r\n    actions: {\r\n      display: 'flex',\r\n      justifyContent: 'space-around'\r\n    }\r\n  };\r\n};\r\n\r\nclass GamingFrame extends Component {\r\n\r\n  render() {\r\n\r\n    const { classes, url, dispatch } = this.props;\r\n    const RouterLink = WrappedLink({ navigateTo: '/loading' });\r\n    const selectWeapon = weapon => () => dispatch(selectType(weapon));\r\n\r\n    switch(url) {\r\n      case 'loading': {\r\n      //TODO: work in progress\r\n        return <div>Loading...</div>;\r\n      }\r\n      default: \r\n      // home page\r\n        return (\r\n          <Card className={classes.fullWidth}>\r\n            <CardHeader\r\n              className={classes.header}\r\n              titleTypographyProps={{\r\n                style: {\r\n                  fontFamily: `'Coiny', cursive`,\r\n                  animation: 'wow 3s linear infinite alternate',\r\n                  fontSize: '2rem'\r\n                }\r\n              }}\r\n              component=\"h1\"\r\n              title=\"Crosses & Zeroes\"\r\n            />\r\n            <CardMedia\r\n              className={classes.media}\r\n              image={backGroundImg}\r\n              title=\"Crosses & Zeroes\"\r\n            />\r\n            <CardContent>\r\n              <Typography variant=\"h4\" component=\"h2\">\r\n                Select your Weapon!\r\n              </Typography>\r\n            </CardContent>\r\n            <CardActions className={classes.actions}>\r\n              <Fab onClick={selectWeapon(false)} component={RouterLink} color=\"primary\" aria-label=\"Zero\">\r\n                <PanoramaFishEyeIcon />\r\n              </Fab>\r\n              <Fab onClick={selectWeapon(true)} component={RouterLink} color=\"secondary\" aria-label=\"Cross\">\r\n                <ClearIcon />\r\n              </Fab>\r\n            </CardActions>\r\n          </Card>\r\n        );\r\n    }\r\n  }\r\n\r\n}\r\n\r\nconst WrappedMatUIGamingFrame = withStyles(styles)(GamingFrame);\r\nexport default connect()(WrappedMatUIGamingFrame);\r\n\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ navigateTo }) => props => <Link to={navigateTo} {...props} />;","import React from 'react';\nimport GamingFrame from '../containers/GamingFrame';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\n// import logo from './logo.svg';\nimport './App.css';\n\nconst styles = {\n  fullHeight: {\n    minHeight: '100%',\n    minWidth: '533px',\n    backgroundColor: 'rgb(250, 235, 215)'\n  },\n  center: {\n    textAlign: 'center',\n    minHeight: '600px',\n    padding: '10px',\n    minWidth: '533px'\n  }\n};\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: { main: blue[500] },\n  },\n  typography: { useNextVariants: true }\n});\n\n\nconst App = props => {\n\n  const { classes, match: { params: { url } } } = props;\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <Grid className={classes.fullHeight} justify=\"center\" container>\n        <Grid container className={classes.center} item xs={5}>\n          <GamingFrame url={url} />\n        </Grid>\n      </Grid>\n    </MuiThemeProvider>\n  );\n};\n\nexport default withStyles(styles)(App);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/:url?\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;","\r\nimport {\r\n  SELECT_TYPE\r\n} from './actions';\r\n\r\n\r\nconst initialState = {\r\n  userType: null,\r\n  computerType: null,\r\n  fieldsPosition: Array(9).fill(null)\r\n};\r\n\r\n\r\nexport const crossZeroApp = createReducer(initialState, {\r\n  [SELECT_TYPE]: (state, { selectionType }) => \r\n    ({ ...state, ...{ userType: selectionType, computerType: !selectionType } })\r\n});\r\n\r\n\r\nfunction createReducer(initialState, handlers) {\r\n  return function reducer(state= initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    }else {\r\n      return state;\r\n    }\r\n  }\r\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './components/Root';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nconst renderApp = () => render(\n  <Root store={store} />, document.getElementById('root')\n);\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./components/App', renderApp)\n}\n\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport * as reducers from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const middlewares = [\r\n    thunkMiddleware\r\n  ];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n  const enhancers = [\r\n    middlewareEnhancer\r\n  ];\r\n  const composedEnhancers = process.env.NODE_ENV === 'development' ? require('redux-devtools-extension').composeWithDevTools(...enhancers) : compose(...enhancers);\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    form: formReducer\r\n  });\r\n\r\n  const store = createStore(rootReducer, preloadedState , composedEnhancers);\r\n\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n  }\r\n\r\n  return store;\r\n}"],"sourceRoot":""}
{"version":3,"sources":["mainImg.png","serviceWorker.js","components/Cross.js","components/Zero.js","helpers.js","components/WinLine.js","components/GamingPane.js","actions.js","containers/Game.js","containers/Preloader.js","components/HomePane.js","components/WrappedLink.js","containers/GamingFrame.js","components/App.js","components/Root.js","reducers.js","index.js","configureStore.js"],"names":["module","exports","__webpack_require__","p","Boolean","window","location","hostname","match","Cross","react_default","a","createElement","className","viewBox","xmlns","style","animation","d","stroke","Zero","WinResult","index","crosses","arguments","length","undefined","Object","classCallCheck","this","zeros","getFields","fieldState$","fields","Array","fill","winPositionsObj","posIndex","hasOwnProperty","selectCell","userType","getCellIndexBaseOnCriticalPositionsFor","weaponType","criticalPositions","hitsCount","push","getCriticalPositionIndexes","selectedRandomIndex","getRandomValue","positionObject","computerType","positionsToAttack","attackPositions","computerPossibleCellsToSelect","computerHitsCount","userHitsCount","indexOfWinPosition","concat","getPositionsToAttack","emptyCellIndexes","emptyIndexes","forEach","field","getEmptyIndexes","includes","calculateWinPosition","crossHitsCount","zeroHitsCount","checkEndOfGame","winResult","every","fieldValue","fieldSelected","fieldNum","num","Math","floor","random","ANIMATION","WinLine","props","_this$props","_this$props$counts","counts","cross","zero","commitCounts","position","Component","GamingPane","_this$props$crossZero","crossZeroApp","computerShot","history","replace","_this$props2","classes","userShot","resetGame","_this$props2$crossZer","showResetBtn","winPositions","index_es","container","justify","alignItems","item","countTitle","variant","component","paddingBottom","color","mainLayout","components_WinLine","map","value","cellLayout","border","key","onClick","innerGrid","cursor","in","aria-label","margin","Autorenew_default","extendedIcon","withStyles","theme","spacing","unit","marginTop","marginRight","display","flexFlow","width","CELL_DIMENSIONS","height","alignContent","alignSelf","fontFamily","SELECT_TYPE","BLOCK_USER","UNBLOCK_USER","COMMIT_SELECTION","RESET_GAME","SHOW_RESET_BTN","COMMIT_COUNTS","unBlockUser","type","userBlocked","commitSelection","selectedNumber","ConnectedGamePane","connect","state","_ref","dispatch","_ref2","_ref2$crossZeroApp","setTimeout","getState","_ref3","asyncToGenerator","regenerator_default","mark","_callee","_getState2","wrap","_context","prev","next","abrupt","Promise","res","_getState3$crossZeroA","stop","_x","_x2","apply","resolve","fieldNumber","withRouter","Preloader","timeout","_proceedToGame","size","defaultProps","RouterLink","navigateTo","Link","assign","to","WrappedLink","header","marginBottom","fullWidth","objectSpread","mixins","gutters","media","backgroundSize","actions","justifyContent","onSelectWeapon","titleTypographyProps","fontSize","title","image","backGroundImg","PanoramaFishEye_default","Clear_default","GamingFrame","url","selectWeapon","Game","containers_Preloader","components_HomePane","weapon","selectionType","MIN_HEIGHT","styles","fullHeight","minHeight","minWidth","backgroundColor","center","textAlign","padding","customTheme","createMuiTheme","palette","primary","main","blue","typography","useNextVariants","params","core_styles","Grid_default","xs","containers_GamingFrame","Root","store","es","BrowserRouter","Route","path","App","initialState","handlers","action","createReducer","2","5","8","4","6","0","1","3","7","_createReducer","defineProperty","toggleBlockUser","justEmptyObject","prop","toggleResetBtn","_ref4","_ref5","preloadedState","middlewares","thunkMiddleware","enhancers","applyMiddleware","composedEnhancers","compose","rootReducer","combineReducers","reducers","form","formReducer","createStore","configureStore","render","components_Root","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.1072e74a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/mainImg.9929ac8c.png\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\r\n\r\nexport default () => (\r\n  <svg className=\"weapon\" viewBox=\"0 0 150 150\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path style={{ animation: '2s ease-out forwards draw' }} d=\"M20 130 130 20\" stroke=\"red\" />\r\n    <path style={{ animation: '2s ease-out 1s forwards draw' }} d=\"M20 20 130 130\" stroke=\"red\" />\r\n  </svg>\r\n);","import React from 'react';\r\n\r\nexport default () => (\r\n  <svg className=\"weapon\" viewBox=\"0 0 200 200\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path style={{ animation: '2s ease-out forwards draw' }} d=\"M 100,100 m -75, 0 a 75,75 0 1,0 150,0 a 75,75 0 1,0 -150,0\" stroke=\"blue\" />\r\n  </svg>\r\n);","\r\nexport class WinResult {\r\n  constructor(index, crosses = true) {\r\n    this.index = index;\r\n    this.crosses = crosses;\r\n    this.zeros = !this.crosses;\r\n  }\r\n}\r\n\r\n\r\n/**\r\n * Get current game fields situation\r\n * \r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * @return {Array<boolean>}\r\n */\r\nexport function getFields(fieldState$) {\r\n\r\n  const fields = Array(9).fill(undefined);\r\n\r\n  for (let index = 0; index < fieldState$.length; index++) {\r\n    const winPositionsObj = fieldState$[index];\r\n\r\n    for (const posIndex in winPositionsObj) {\r\n      if (winPositionsObj.hasOwnProperty(posIndex) && typeof fields[posIndex] === 'undefined' && typeof winPositionsObj[posIndex] !== 'undefined') {\r\n        fields[posIndex] = winPositionsObj[posIndex];\r\n      }\r\n    }\r\n  }\r\n\r\n  return fields;\r\n}\r\n\r\n\r\n/**\r\n* get computer selected cell number, to commit a pace\r\n* @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n* @param {boolean} userType  \r\n* @return {number}\r\n*/\r\nexport function selectCell(fieldState$, userType) {\r\n\r\n  const getCellIndexBaseOnCriticalPositionsFor = weaponType => {\r\n    const criticalPositions = getCriticalPositionIndexes(fieldState$, weaponType);\r\n    if (criticalPositions.length) {\r\n      const selectedRandomIndex = getRandomValue(criticalPositions.length);\r\n      const positionObject = fieldState$[criticalPositions[selectedRandomIndex]];\r\n      for (const posIndex in positionObject) {\r\n        if (positionObject.hasOwnProperty(posIndex) && typeof positionObject[posIndex] === 'undefined') {\r\n          return +posIndex;\r\n        }\r\n      }\r\n    }\r\n  };\r\n  const computerType = !userType;\r\n\r\n  // find out whether computer may attack and win\r\n  let posIndex = getCellIndexBaseOnCriticalPositionsFor(computerType);\r\n  if (typeof posIndex === 'number') {\r\n    return posIndex;\r\n  }\r\n\r\n  // computer protecting self\r\n  posIndex = getCellIndexBaseOnCriticalPositionsFor(userType);\r\n  if (typeof posIndex === 'number') {\r\n    return posIndex;\r\n  }\r\n\r\n  // ok, we didn't find any critical situations so let's try to attack\r\n  const positionsToAttack = getPositionsToAttack(fieldState$, computerType);\r\n\r\n  if (positionsToAttack.length) {\r\n    const selectedRandomIndex = getRandomValue(positionsToAttack.length);\r\n    const { computerPossibleCellsToSelect } = positionsToAttack[selectedRandomIndex];\r\n    posIndex = computerPossibleCellsToSelect[getRandomValue(computerPossibleCellsToSelect.length)];\r\n    return +posIndex;\r\n  }\r\n\r\n  // just select any empty cell\r\n  const emptyCellIndexes = getEmptyIndexes(fieldState$);\r\n  if (userType && emptyCellIndexes.includes(4)) {\r\n    return 4;\r\n  }\r\n  const selectedRandomIndex = getRandomValue(emptyCellIndexes.length);\r\n  posIndex = emptyCellIndexes[selectedRandomIndex];\r\n\r\n  return +posIndex;\r\n\r\n}\r\n\r\n/**\r\n * Base on redux store win fields return win position if any or undefined\r\n * \r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * @return {WinResult | undefined}\r\n */\r\nexport function calculateWinPosition(fieldState$) {\r\n  for (let index = 0; index < fieldState$.length; index++) {\r\n    const winPositionsObj = fieldState$[index];\r\n\r\n    let crossHitsCount = 0, zeroHitsCount = 0;\r\n\r\n    for (const posIndex in winPositionsObj) {\r\n      if (winPositionsObj.hasOwnProperty(posIndex) && typeof winPositionsObj[posIndex] !== 'undefined') {\r\n        winPositionsObj[posIndex] ? crossHitsCount++ : zeroHitsCount++;\r\n        if (crossHitsCount === 3) {\r\n          return new WinResult(index);\r\n        }\r\n        if (zeroHitsCount === 3) {\r\n          return new WinResult(index, false);\r\n        }\r\n      }\r\n    }\r\n\r\n\r\n  }\r\n}\r\n\r\n/**\r\n * Check if game is over\r\n * \r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * @return {boolean}\r\n */\r\nexport function checkEndOfGame(fieldState$) {\r\n  const winResult = calculateWinPosition(fieldState$);\r\n  const fields = getFields(fieldState$);\r\n  return winResult instanceof WinResult || fields.every(fieldValue => typeof fieldValue === 'boolean');\r\n}\r\n\r\n/**\r\n * Check if field already selected\r\n * \r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * @param {number} fieldNum\r\n * @return {boolean}\r\n */\r\nexport function fieldSelected(fieldState$, fieldNum) {\r\n  return typeof getFields(fieldState$)[fieldNum] === 'boolean';\r\n}\r\n\r\n/**\r\n * get empty cells\r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * @return {Array<number>}\r\n */\r\nfunction getEmptyIndexes(fieldState$) {\r\n  const emptyIndexes = [];\r\n\r\n  getFields(fieldState$).forEach((field, index) => {\r\n    if (typeof field === 'undefined') {\r\n      emptyIndexes.push(index);\r\n    }\r\n  });\r\n\r\n  return emptyIndexes;\r\n}\r\n\r\n\r\n/**\r\n * get attack position indexes base on redux store winPositions\r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * indicates type of weapon selected by user\r\n * @param {boolean} computerType \r\n * @return {Array<{ indexOfWinPosition: number, computerPossibleCellsToSelect: Array<number> }>}\r\n */\r\nfunction getPositionsToAttack(fieldState$, computerType) {\r\n  const attackPositions = [];\r\n\r\n  for (let index = 0; index < fieldState$.length; index++) {\r\n    const winPositionsObj = fieldState$[index];\r\n\r\n    let computerPossibleCellsToSelect = [], computerHitsCount = 0, userHitsCount = 0;\r\n    for (const posIndex in winPositionsObj) {\r\n      if (winPositionsObj.hasOwnProperty(posIndex)) {\r\n        if (typeof winPositionsObj[posIndex] === 'undefined') {\r\n          computerPossibleCellsToSelect.push(posIndex);\r\n        } else {\r\n          winPositionsObj[posIndex] === computerType ? computerHitsCount++ : userHitsCount++;\r\n        }\r\n      }\r\n    }\r\n    if (computerHitsCount === 1 && userHitsCount === 0) {\r\n      attackPositions.push({ indexOfWinPosition: index, computerPossibleCellsToSelect: [...computerPossibleCellsToSelect] });\r\n    }\r\n  }\r\n\r\n  return attackPositions;\r\n\r\n}\r\n\r\n/**\r\n * get critical position indexes base on redux store winPositions\r\n * @param {Array<{ [index: number]: boolean | undefined }>} fieldState$ \r\n * indicates type of weapon selected by user\r\n * @param {boolean} weaponType \r\n * @return {Array<number>}\r\n */\r\nfunction getCriticalPositionIndexes(fieldState$, weaponType) {\r\n  const criticalPositions = [];\r\n  for (let index = 0; index < fieldState$.length; index++) {\r\n    const winPositionsObj = fieldState$[index];\r\n\r\n    let hitsCount = 0;\r\n    for (const posIndex in winPositionsObj) {\r\n      if (winPositionsObj.hasOwnProperty(posIndex) && typeof winPositionsObj[posIndex] !== 'undefined') {\r\n        winPositionsObj[posIndex] === weaponType ? hitsCount++ : hitsCount--;\r\n      }\r\n    }\r\n    if (hitsCount === 2) {\r\n      criticalPositions.push(index);\r\n    }\r\n  }\r\n  return criticalPositions;\r\n}\r\n\r\nfunction getRandomValue(num) {\r\n  return Math.floor((Math.random() * num));\r\n}","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { WinResult } from '../helpers';\r\n\r\nconst ANIMATION = { animation: '2s ease-out 2s forwards draw' };\r\n\r\nclass WinLine extends Component {\r\n  \r\n  componentDidMount() {\r\n    const { crosses } = this.props.winResult;\r\n    if (typeof crosses === 'boolean') {\r\n      const { counts: { cross, zero }, commitCounts } = this.props;\r\n      const updatedCount = crosses ? { cross: cross + 1 } : { zero: zero + 1 };\r\n      commitCounts(updatedCount);\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { index } = this.props.winResult;\r\n    return (\r\n      typeof index === 'number' ? \r\n        <svg className=\"line\" style={{ position: 'absolute' }} xmlns=\"http://www.w3.org/2000/svg\">\r\n          {\r\n            index === 1 ? <path style={ANIMATION} d=\"M20 450 450 20\" />\r\n            : index === 2 ? <path style={ANIMATION} d=\"M20 20 450 450\" />\r\n            : index === 3 ? <path style={ANIMATION} d=\"M20 80 450 80\" />\r\n            : index === 4 ? <path style={ANIMATION} d=\"M20 235 450 235\" />\r\n            : index === 5 ? <path style={ANIMATION} d=\"M20 390 450 390\" />\r\n            : index === 6 ? <path style={ANIMATION} d=\"M80 20 80 450\" />\r\n            : index === 7 ? <path style={ANIMATION} d=\"M235 20 235 450\" />\r\n            : <path style={ANIMATION} d=\"M390 20 390 450\" />\r\n          }\r\n        </svg>\r\n        : null\r\n    ); \r\n  }\r\n}\r\n\r\nWinLine.propTypes = {\r\n  winResult: PropTypes.instanceOf(WinResult),\r\n  commitCounts: PropTypes.func.isRequired,\r\n  counts: PropTypes.shape({\r\n    cross: PropTypes.number.isRequired,\r\n    zero: PropTypes.number.isRequired\r\n  }).isRequired\r\n};\r\n\r\nexport default WinLine;\r\n","import React, { Component } from 'react';\r\nimport { Grid, Paper, Fab, withStyles, Fade, Typography } from '@material-ui/core';\r\nimport AutorenewIcon from '@material-ui/icons/Autorenew';\r\nimport Cross from './Cross';\r\nimport Zero from './Zero';\r\nimport WinLine from './WinLine';\r\n\r\nconst CELL_DIMENSIONS = 150;\r\nconst GUTTERS = 3;\r\nconst PALITRA = 'solid grey';\r\nconst sizer = () => (CELL_DIMENSIONS * 3) + (GUTTERS * 6);\r\n\r\nconst styles = theme => {\r\n\r\n  return {\r\n    margin: {\r\n      margin: theme.spacing.unit,\r\n      marginTop: '30px'\r\n    },\r\n    extendedIcon: {\r\n      marginRight: theme.spacing.unit,\r\n    },\r\n    mainLayout: { \r\n      display: 'flex', \r\n      flexFlow: 'row wrap', \r\n      width: `${sizer()}px`,\r\n      height: `${sizer()}px`,\r\n      alignItems: 'center',\r\n      alignContent: 'center',\r\n      alignSelf: 'center',\r\n      border: `${GUTTERS}px ${PALITRA}`,\r\n      position: 'relative'\r\n    },\r\n    cellLayout: {\r\n      width: `${CELL_DIMENSIONS}px`, \r\n      height: `${CELL_DIMENSIONS}px`\r\n    },\r\n    innerGrid: {\r\n      width: '100%', \r\n      height: '100%'\r\n    },\r\n    countTitle: {\r\n      fontFamily: `'Coiny', cursive`,\r\n      color: '#03A9F4'\r\n    }\r\n  };\r\n};\r\n\r\nclass GamingPane extends Component {\r\n\r\n\r\n  componentDidMount() {\r\n    \r\n    const { crossZeroApp: { computerType, userType }, computerShot, history } = this.props;\r\n    if (typeof userType === 'undefined' || typeof computerType === 'undefined') {\r\n      history.replace('/');\r\n      return;\r\n    }\r\n    if (computerType) {\r\n      computerShot();\r\n    }\r\n  }\r\n\r\n  render() {\r\n\r\n    const { classes, winResult, fields, userShot, resetGame, commitCounts, fieldSelected, crossZeroApp: { showResetBtn, winPositions, counts } } = this.props;\r\n    \r\n    return (\r\n      <Grid container justify='center' alignItems='center'>\r\n        <Grid item>\r\n          <Typography className={classes.countTitle} variant=\"h4\" component=\"h2\">\r\n            Текущий счёт:\r\n          </Typography>\r\n          <Grid style={{ paddingBottom: '10px' }} container justify='center' alignItems='center'>\r\n            <Typography style={{ color: 'red' }} variant=\"h1\" component=\"h2\">{ counts.cross }</Typography><Typography variant=\"h1\" component=\"h2\">:</Typography><Typography style={{ color: 'blue' }} variant=\"h1\" component=\"h2\">{ counts.zero }</Typography>\r\n          </Grid>\r\n        </Grid>\r\n        <Grid item>\r\n          <Paper className={classes.mainLayout}>\r\n            { winResult ? <WinLine commitCounts={commitCounts} winResult={winResult} counts={counts}/> : null }\r\n            {\r\n              fields.map((value, index) => (\r\n                <div className={classes.cellLayout} style={{ border: `${ GUTTERS}px ${PALITRA}` }} key={index}>\r\n                  <Grid \r\n                    container \r\n                    justify=\"center\" \r\n                    alignItems=\"center\"\r\n                    onClick={() => userShot(index)} \r\n                    className={classes.innerGrid}\r\n                    style={{ cursor: fieldSelected(winPositions, index) ? 'not-allowed' : 'pointer' }}>\r\n                    {\r\n                      typeof value === 'undefined' ? null : (value ? <Cross /> : <Zero />) \r\n                    }\r\n                  </Grid>\r\n                </div>\r\n                )\r\n              )\r\n            }\r\n          </Paper>\r\n        </Grid>\r\n        {\r\n          showResetBtn ? \r\n            <Grid item>\r\n              <Fade in={showResetBtn}>\r\n                <Fab onClick={resetGame} variant=\"extended\" color=\"primary\" aria-label=\"Add\" className={classes.margin}>\r\n                  <AutorenewIcon className={classes.extendedIcon} />\r\n                  начать заново\r\n                </Fab>\r\n              </Fade>\r\n            </Grid>\r\n            : null\r\n        }\r\n      </Grid>\r\n    ); \r\n  }\r\n}\r\n\r\n\r\nexport default withStyles(styles)(GamingPane);","\r\n// action types\r\nexport const SELECT_TYPE = 'SELECT_TYPE';\r\nexport const BLOCK_USER = 'BLOCK_USER';\r\nexport const UNBLOCK_USER = 'UNBLOCK_USER';\r\nexport const COMMIT_SELECTION = 'COMMIT_SELECTION';\r\nexport const RESET_GAME = 'RESET_GAME';\r\nexport const SHOW_RESET_BTN = 'SHOW_RESET_BTN';\r\nexport const HIDE_RESET_BTN = 'HIDE_RESET_BTN';\r\nexport const COMMIT_COUNTS = 'COMMIT_COUNTS';\r\n\r\n\r\n// other constants\r\n\r\n\r\n// action creators\r\n\r\nexport function selectType(crossOrZero) {\r\n  return {\r\n    type: SELECT_TYPE,\r\n    selectionType: crossOrZero\r\n  }\r\n}\r\n\r\nexport function blockUser() {\r\n  return {\r\n    type: BLOCK_USER,\r\n    userBlocked: true\r\n  }\r\n}\r\n\r\nexport function unBlockUser() {\r\n  return {\r\n    type: UNBLOCK_USER,\r\n    userBlocked: false\r\n  }\r\n}\r\n\r\nexport function commitSelection(selectedNumber, weaponType) {\r\n  return {\r\n    type: COMMIT_SELECTION,\r\n    selectedNumber,\r\n    weaponType\r\n  };\r\n}\r\n\r\nexport function resetGame() {\r\n  return {\r\n    type: RESET_GAME\r\n  };\r\n}\r\n\r\nexport function showResetBtn() {\r\n  return {\r\n    type: SHOW_RESET_BTN,\r\n    showResetBtn: true\r\n  }\r\n}\r\n\r\nexport function hideResetBtn() {\r\n  return {\r\n    type: SHOW_RESET_BTN,\r\n    showResetBtn: false\r\n  }\r\n}\r\n\r\nexport function commitCounts(counts) {\r\n  return {\r\n    type: COMMIT_COUNTS,\r\n    counts\r\n  };\r\n}","import { connect } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport GamingPane from '../components/GamingPane';\r\nimport { calculateWinPosition, getFields, checkEndOfGame, selectCell, fieldSelected } from '../helpers';\r\nimport { blockUser, unBlockUser, commitSelection, resetGame as resetGameActionCreator, hideResetBtn, showResetBtn as showResetBtnActionCreator, commitCounts } from '../actions';\r\n\r\n\r\nconst mapStateToProps = (state, { crossZeroApp: { winPositions } }) => {\r\n  const winResult = calculateWinPosition(winPositions);\r\n  \r\n  return {\r\n    winResult,\r\n    fields: getFields(winPositions),\r\n    fieldSelected\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch, { crossZeroApp: { winPositions, userType, userBlocked } }) => {\r\n\r\n  if (checkEndOfGame(winPositions)) {\r\n    setTimeout(() => {\r\n      dispatch((dispatch, getState) => {\r\n        const { crossZeroApp: { winPositions } } = getState();\r\n        if (checkEndOfGame(winPositions)) {\r\n          dispatch(showResetBtnActionCreator());\r\n        }\r\n      });\r\n    }, 3000);\r\n  }\r\n\r\n  // async computerShot action helper\r\n  const computerShot = async (dispatch, getState) => {\r\n\r\n    const { crossZeroApp: { winPositions } } = getState();\r\n\r\n    dispatch(blockUser());\r\n\r\n    if (checkEndOfGame(winPositions)) {\r\n      dispatch(unBlockUser());\r\n      return;\r\n    }\r\n\r\n    await new Promise(res => setTimeout(res, 2000));\r\n    await dispatch((dispatch, getState) => {\r\n      const { crossZeroApp: { winPositions, userType, computerType } } = getState();\r\n      const fieldNumber = selectCell(winPositions, userType);\r\n      dispatch(commitSelection(fieldNumber, computerType));\r\n      return new Promise(res => setTimeout(res, 2000));\r\n    })\r\n\r\n    dispatch(unBlockUser());\r\n    \r\n  };\r\n\r\n  // sync userShot action helper\r\n  const userShot = fieldNumber => {\r\n \r\n    if (userBlocked || fieldSelected(winPositions, fieldNumber) || checkEndOfGame(winPositions)) {\r\n      return;\r\n    }\r\n\r\n    dispatch(commitSelection(fieldNumber, userType));\r\n    dispatch(computerShot);\r\n  };\r\n\r\n  // async resetGame action helper\r\n  const resetGame = (dispatch, getState) => {\r\n    const { crossZeroApp: { computerType } } = getState();\r\n    dispatch(resetGameActionCreator());\r\n    dispatch(hideResetBtn());\r\n    if (computerType) {\r\n      return dispatch(computerShot);\r\n    }\r\n    return Promise.resolve();\r\n  };\r\n\r\n  return { \r\n    computerShot: () => dispatch(computerShot), \r\n    userShot, \r\n    resetGame: () => dispatch(resetGame),\r\n    commitCounts: counts => dispatch(commitCounts(counts))\r\n  }\r\n\r\n};\r\n\r\nconst ConnectedGamePane = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(GamingPane);\r\n\r\nexport default withRouter(ConnectedGamePane);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { CircularProgress, Grid } from '@material-ui/core';\r\n\r\nclass Preloader extends Component {\r\n\r\n  static defaultProps = {\r\n    timeout: 2500\r\n  };\r\n\r\n  _proceedToGame() {\r\n    const { history, timeout } = this.props;\r\n\r\n    setTimeout(() => {\r\n      history.replace('/game', null);\r\n    }, timeout);\r\n  }\r\n\r\n  componentDidMount() {\r\n    this._proceedToGame();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Grid \r\n        container \r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n        <CircularProgress size={100} color=\"secondary\" />\r\n      </Grid>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nPreloader.propTypes = {\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n    replace: PropTypes.func.isRequired\r\n  }).isRequired,\r\n  timeout: PropTypes.number\r\n};\r\n\r\nexport default withRouter(Preloader);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport PanoramaFishEyeIcon from '@material-ui/icons/PanoramaFishEye';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport { \r\n  withStyles, \r\n  Fab, \r\n  Card, \r\n  CardHeader,\r\n  CardMedia,\r\n  CardContent,\r\n  CardActions,\r\n  Typography\r\n} from '@material-ui/core';\r\nimport WrappedLink from './WrappedLink';\r\nimport backGroundImg from '../mainImg.png';\r\n\r\n\r\nconst styles = theme => {\r\n\r\n  return {\r\n    header: {\r\n      marginBottom: 0,\r\n      paddingBottom: 0\r\n    },\r\n    fullWidth: {\r\n      width: '100%',\r\n      ...theme.mixins.gutters(),\r\n      paddingBottom: theme.spacing.unit * 2\r\n    },\r\n    media: {\r\n      height: '60%',\r\n      backgroundSize: 'contain'\r\n    },\r\n    actions: {\r\n      display: 'flex',\r\n      justifyContent: 'space-around'\r\n    }\r\n  };\r\n};\r\n\r\nconst RouterLink = WrappedLink({ navigateTo: '/loading' });\r\n\r\nconst HomePane = ({ classes, onSelectWeapon }) => {\r\n  return (\r\n    <Card className={classes.fullWidth}>\r\n      <CardHeader\r\n        className={classes.header}\r\n        titleTypographyProps={{\r\n          style: {\r\n            fontFamily: `'Coiny', cursive`,\r\n            animation: 'wow 3s linear infinite alternate',\r\n            fontSize: '2rem'\r\n          }\r\n        }}\r\n        component=\"h1\"\r\n        title=\"Crosses & Zeroes\"\r\n      />\r\n      <CardMedia\r\n        className={classes.media}\r\n        image={backGroundImg}\r\n        title=\"Crosses & Zeroes\"\r\n      />\r\n      <CardContent>\r\n        <Typography variant=\"h4\" component=\"h2\">\r\n          Выбери своё оружие!\r\n        </Typography>\r\n      </CardContent>\r\n      <CardActions className={classes.actions}>\r\n        <Fab onClick={() => onSelectWeapon(false)} component={RouterLink} color=\"primary\" aria-label=\"Zero\">\r\n          <PanoramaFishEyeIcon />\r\n        </Fab>\r\n        <Fab onClick={() => onSelectWeapon(true)} component={RouterLink} color=\"secondary\" aria-label=\"Cross\">\r\n          <ClearIcon />\r\n        </Fab>\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nHomePane.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  onSelectWeapon: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HomePane);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default ({ navigateTo }) => props => <Link to={navigateTo} {...props} />;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Game from './Game';\r\nimport Preloader from './Preloader';\r\nimport HomePane from '../components/HomePane';\r\nimport { selectType } from '../actions';\r\n\r\nconst mapStateToProps = ({ crossZeroApp }) => ({ crossZeroApp });\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  selectWeapon: weapon => dispatch(selectType(weapon))\r\n})\r\n\r\nclass GamingFrame extends Component {\r\n\r\n  static defaultProps = {\r\n    url: ''\r\n  }\r\n\r\n  render() {\r\n\r\n    const { url, selectWeapon, crossZeroApp } = this.props;\r\n\r\n    switch(url) {\r\n      case 'game': {\r\n      // game page\r\n        return <Game crossZeroApp={crossZeroApp} />;\r\n      }\r\n      case 'loading': {\r\n      // loading page\r\n        return <Preloader/>;\r\n      }\r\n      default: \r\n      // home page\r\n        return <HomePane onSelectWeapon={selectWeapon} />;\r\n    }\r\n  }\r\n\r\n}\r\n\r\nGamingFrame.propTypes = {\r\n  url: PropTypes.string,\r\n  selectWeapon: PropTypes.func.isRequired,\r\n  crossZeroApp: PropTypes.object.isRequired\r\n};\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(GamingFrame);\r\n\r\n","import React from 'react';\nimport { withStyles, MuiThemeProvider, createMuiTheme } from '@material-ui/core';\nimport blue from '@material-ui/core/colors/blue';\nimport Grid from '@material-ui/core/Grid';\nimport GamingFrame from '../containers/GamingFrame';\nimport './App.css';\n\nconst MIN_HEIGHT = `${600}px`;\n\nconst styles = {\n  fullHeight: {\n    minHeight: '100%',\n    minWidth: '533px',\n    backgroundColor: 'rgb(250, 235, 215)'\n  },\n  center: {\n    textAlign: 'center',\n    minHeight: MIN_HEIGHT,\n    padding: '10px',\n    minWidth: '533px'\n  }\n};\n\nconst customTheme = createMuiTheme({\n  palette: {\n    primary: { main: blue[500] },\n  },\n  typography: { useNextVariants: true }\n});\n\n\nconst App = props => {\n\n  const { classes, match: { params: { url } } } = props;\n\n  return (\n    <MuiThemeProvider theme={customTheme}>\n      <Grid className={classes.fullHeight} justify=\"center\" container>\n        <Grid container style={{ minHeight: !url ? MIN_HEIGHT : 'unset' }} className={classes.center} item justify=\"center\" xs={5}>\n          <GamingFrame url={url} />\n        </Grid>\n      </Grid>\n    </MuiThemeProvider>\n  );\n};\n\n\n\nexport default withStyles(styles)(App);","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport App from './App';\r\n\r\nconst Root = ({ store }) => (\r\n  <Provider store={store}>\r\n    <Router>\r\n      <Route path=\"/:url?\" component={App} />\r\n    </Router>\r\n  </Provider>\r\n);\r\n\r\nRoot.propTypes = {\r\n  store: PropTypes.object.isRequired\r\n};\r\n\r\nexport default Root;","\r\nimport {\r\n  SELECT_TYPE, BLOCK_USER, UNBLOCK_USER, COMMIT_SELECTION, RESET_GAME, SHOW_RESET_BTN, HIDE_RESET_BTN, COMMIT_COUNTS\r\n} from './actions';\r\n\r\n\r\nconst initialState = {\r\n  showResetBtn: false,\r\n  counts: {\r\n    cross: 0,\r\n    zero: 0\r\n  },\r\n  userBlocked: false,\r\n  userType: undefined,\r\n  computerType: undefined,\r\n  winPositions: [\r\n    { 2: undefined, 5: undefined, 8: undefined },\r\n    { 2: undefined, 4: undefined, 6: undefined },\r\n    { 0: undefined, 4: undefined, 8: undefined },\r\n    { 0: undefined, 1: undefined, 2: undefined },\r\n    { 3: undefined, 4: undefined, 5: undefined },\r\n    { 6: undefined, 7: undefined, 8: undefined },\r\n    { 0: undefined, 3: undefined, 6: undefined },\r\n    { 1: undefined, 4: undefined, 7: undefined }\r\n  ]\r\n};\r\n\r\n\r\nexport const crossZeroApp = createReducer(initialState, {\r\n  [SELECT_TYPE]: (state, { selectionType, weaponType }) => \r\n    ({ ...state, userType: selectionType, computerType: !selectionType }),\r\n  [BLOCK_USER]: toggleBlockUser,\r\n  [UNBLOCK_USER]: toggleBlockUser,\r\n  [COMMIT_SELECTION]: (state, { selectedNumber, weaponType }) => \r\n    ({ ...state, winPositions: state.winPositions.map(positionObject => positionObject.hasOwnProperty(selectedNumber) ? { ...positionObject, [selectedNumber]: weaponType } : positionObject)}),\r\n  [RESET_GAME]: state => \r\n    ({ ...state, winPositions: state.winPositions.map(positionObject => {\r\n      const justEmptyObject = {};\r\n      for (const prop in positionObject) {\r\n        if (positionObject.hasOwnProperty(prop)) {\r\n          justEmptyObject[prop] = undefined;\r\n        }\r\n      }\r\n      return justEmptyObject;\r\n    }) }),\r\n  [SHOW_RESET_BTN]: toggleResetBtn,\r\n  [HIDE_RESET_BTN]: toggleResetBtn,\r\n  [COMMIT_COUNTS]: (state, { counts }) => ({ ...state, counts: { ...state.counts, ...counts } })\r\n});\r\n\r\nfunction toggleBlockUser(state, { userBlocked }) {\r\n  return {\r\n    ...state,\r\n    userBlocked\r\n  };\r\n}\r\n\r\nfunction toggleResetBtn(state, { showResetBtn }) {\r\n  return {\r\n    ...state,\r\n    showResetBtn\r\n  };\r\n}\r\n\r\nfunction createReducer(initialState, handlers) {\r\n  return function reducer(state= initialState, action) {\r\n    if (handlers.hasOwnProperty(action.type)) {\r\n      return handlers[action.type](state, action);\r\n    }else {\r\n      return state;\r\n    }\r\n  }\r\n}","import React from 'react';\nimport { render } from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\nimport Root from './components/Root';\nimport configureStore from './configureStore';\n\nconst store = configureStore();\n\nconst renderApp = () => render(\n  <Root store={store} />, document.getElementById('root')\n);\n\nif (process.env.NODE_ENV !== 'production' && module.hot) {\n  module.hot.accept('./components/App', renderApp)\n}\n\nrenderApp();\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { applyMiddleware, createStore, combineReducers, compose } from 'redux';\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport thunkMiddleware from 'redux-thunk';\r\n// import { composeWithDevTools } from 'redux-devtools-extension';\r\nimport * as reducers from './reducers';\r\n\r\nexport default function configureStore(preloadedState) {\r\n  const middlewares = [\r\n    thunkMiddleware\r\n  ];\r\n  const middlewareEnhancer = applyMiddleware(...middlewares);\r\n  const enhancers = [\r\n    middlewareEnhancer\r\n  ];\r\n  const composedEnhancers = process.env.NODE_ENV === 'development' ? require('redux-devtools-extension').composeWithDevTools(...enhancers) : compose(...enhancers);\r\n\r\n  const rootReducer = combineReducers({\r\n    ...reducers,\r\n    form: formReducer\r\n  });\r\n\r\n  const store = createStore(rootReducer, preloadedState , composedEnhancers);\r\n\r\n  if (process.env.NODE_ENV !== 'production' && module.hot) {\r\n    module.hot.accept('./reducers', () => store.replaceReducer(rootReducer));\r\n  }\r\n\r\n  return store;\r\n}"],"sourceRoot":""}